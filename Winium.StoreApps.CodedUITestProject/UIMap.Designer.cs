// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestPlatform.UnitTestFramework;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            XamlButton uIHelloButton = this.UIWiniumautomationExpeWindow.UIHelloButton;
            #endregion

            // Verify that the 'ControlType' property of 'Hello!' button contains 'Button'
            StringAssert.Contains(uIHelloButton.ControlType.ToString(), this.AssertMethod1ExpectedValues.UIHelloButtonControlType);
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIWiniumautomationExpeWindow UIWiniumautomationExpeWindow
        {
            get
            {
                if ((this.mUIWiniumautomationExpeWindow == null))
                {
                    this.mUIWiniumautomationExpeWindow = new UIWiniumautomationExpeWindow();
                }
                return this.mUIWiniumautomationExpeWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIWiniumautomationExpeWindow mUIWiniumautomationExpeWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Hello!' button contains 'Button'
        /// </summary>
        public string UIHelloButtonControlType = "Button";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIWiniumautomationExpeWindow : XamlWindow
    {
        
        public UIWiniumautomationExpeWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "WiniumautomationExperimentApp";
            #endregion
        }
        
        #region Properties
        public XamlButton UIHelloButton
        {
            get
            {
                if ((this.mUIHelloButton == null))
                {
                    this.mUIHelloButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIHelloButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "MagicButton";
                    #endregion
                }
                return this.mUIHelloButton;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUIHelloButton;
        #endregion
    }
}
